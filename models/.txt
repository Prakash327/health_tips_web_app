const mongoose = require('mongoose');
const Schema = mongoose.Schema;

// User Schema (basic, for reference)
const UserSchema = new Schema({
  username: { type: String, required: true, unique: true },
  email: { type: String, required: true, unique: true },
  createdAt: { type: Date, default: Date.now }
});

// Post Schema
const PostSchema = new Schema({
  user: { type: Schema.Types.ObjectId, ref: 'User', required: true },
  content: { type: String, required: true },
  image: { type: String }, // Optional URL for post image
  likes: [{ type: Schema.Types.ObjectId, ref: 'Like' }],
  comments: [{ type: Schema.Types.ObjectId, ref: 'Comment' }],
  shares: [{ type: Schema.Types.ObjectId, ref: 'Share' }],
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now }
});

// Like Schema
const LikeSchema = new Schema({
  user: { type: Schema.Types.ObjectId, ref: 'User', required: true },
  post: { type: Schema.Types.ObjectId, ref: 'Post', required: true },
  createdAt: { type: Date, default: Date.now }
}, {
  // Ensure a user can like a post only once
  indexes: [[{ user: 1, post: 1 }, { unique: true }]]
});

// Comment Schema
const CommentSchema = new Schema({
  user: { type: Schema.Types.ObjectId, ref: 'User', required: true },
  post: { type: Schema.Types.ObjectId, ref: 'Post', required: true },
  content: { type: String, required: true },
  createdAt: { type: Date, default: Date.now }
});

// Share Schema
const ShareSchema = new Schema({
  user: { type: Schema.Types.ObjectId, ref: 'User', required: true },
  post: { type: Schema.Types.ObjectId, ref: 'Post', required: true },
  createdAt: { type: Date, default: Date.now }
});

// Models
const User = mongoose.model('User', UserSchema);
const Post = mongoose.model('Post', PostSchema);
const Like = mongoose.model('Like', LikeSchema);
const Comment = mongoose.model('Comment', CommentSchema);
const Share = mongoose.model('Share', ShareSchema);

module.exports = { User, Post, Like, Comment, Share };
//
i am working in a project and i have created login/register/ and i have sucessfully added post functionality where user can add a comment on that post how is like and share functionality used. i am working with nodejs and mongodb , and i used fire base for authentication and authorization
